{"componentChunkName":"component---src-components-templates-blog-post-js","path":"/posts/阶段一面试题/","result":{"data":{"markdownRemark":{"fields":{"slug":"posts/阶段一面试题/"},"frontmatter":{"title":"阶段一面试题","description":"阶段一面试题.","date":"2022 年 08 月 10 日","thumbnail":"assets/img/water-reminder-app.png"},"html":"<h1>■ 符号说明</h1>\n<p>💘 课题   </p>\n<p>🌟 常见重要   </p>\n<p>🌛 需要有印象的</p>\n<h1>■ 杂谈</h1>\n<h2>🌛 SEO优化</h2>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">1、合理的title、description、keywords：搜索对着三项的权重逐个减小，title值强调重点即可；description把页面内容高度概括，不可过分堆砌关键词；keywords列举出重要关键词。\n\n2、语义化的HTML代码，符合W3C规范：语义化代码让搜索引擎容易理解网页\n\n3、重要内容HTML代码放在最前：搜索引擎抓取HTML顺序是从上到下，保证重要内容一定会被抓取\n\n4、重要内容不要用js输出：爬虫不会执行js获取内容（查看网页源代码要有数据，有利于seo优化）\n\n5、少用iframe：搜索引擎不会抓取iframe中的内容\n\n6、非装饰性图片必须加alt\n\n7、提高网站速度：网站速度是搜索引擎排序的一个重要指标。</code></pre></div>\n<h2>🌟 渐进增强与优雅降级</h2>\n<p>渐进增强：针对低版本浏览器进行构建页面，保证最基本的功能，然后再针对高级浏览器进行效果、交互等改进，达到更好的用户体验。 </p>\n<p>优雅降级：一开始就构建完整的功能，然后再针对低版本浏览器进行兼容。</p>\n<h1>■ 一阶段  HTML</h1>\n<h2>🌟 H5新增API</h2>\n<p>HTML5新增了哪些内容或API，使用过哪些</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(1) 音视频audio、video标签\n(2) 语义化标签article、footer、header、nav、section等\n(3) 表单控件date、time、color、emial、url、search等\n(4) 新增图形绘制canvas标签\n(5) H5存储localStorage、sessionStorage\n(6) 新的技术webworker, websocket, Geolocation;\n(7) DNS预获取、FormData、FileReader、全屏API（Fullscreen API） \n等等</code></pre></div>\n<h2>🌛 忽略电话号码</h2>\n<p>移动设备忽略将页面中的数字识别为电话号码的方法</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">&lt;meta name=\"format-detection\" content=\"telephone=no\"> // 禁止把数字转换为拨号链接\n&lt;meta name=\"format-detection\" content=\"address=no\">\t  // 禁止把地址跳转至地图\n&lt;meta name=\"format-detection\" content=\"email=no\">\t  // 禁止识别邮箱自动发送邮件\n&lt;meta name=\"format-detection\" content=\"telephone=no,adress=no,email=no\"></code></pre></div>\n<h2>🌟 iframe标签</h2>\n<p>iframe就是HTML中，用于网页嵌套网页的。一个网页可以嵌套到另一个网页中，可以嵌套很多层。</p>\n<ul>\n<li>返回</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">- iframe会阻塞主页面的Onload事件\n- 搜索引擎的检索程序无法解读这种页面，不利于SEO\n- iframe和主页面共享连接池，而浏览器对相同域的连接有限制，所以会影响页面的并行加载\n- 使用iframe之前需要考虑这两个缺点。如果需要使用iframe，最好是通过javascript动态给iframe添加src属性值，这样可以绕开以上两个问题</code></pre></div>\n<ul>\n<li>举例</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">&lt;iframe scr=\"http://baidu.com\" >&lt;/iframe>\n&lt;iframe scr=\"http://baidu.com\" >&lt;/iframe> </code></pre></div>\n<h2>🌟 实战必备：favicon.ico</h2>\n<p>制作：<a href=\"https://tool.520101.com/diannao/ico/\">https://tool.520101.com/diannao/ico/</a>   </p>\n<p>作用：通过link生成网站自定义图标</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">&lt;link rel=\"shortcut icon\" href=\"http://www.mobiletrain.org/favicon.ico\" type=\"/image/x-icon\" / ></code></pre></div>\n<p>场景：打开淘宝京东  查看窗口左上角有自定义图标</p>\n<h2>🌟 性能优化：标签你不知道的属性</h2>\n<ul>\n<li>场景：打开淘宝、京东等网站查看标签加了一些你不知道的属性</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\"> &lt;meta name=\"renderer\" content=\"webkit\" />\n  &lt;title>淘宝网 - 淘！我喜欢&lt;/title>\n  &lt;meta name=\"spm-id\" content=\"a21bo\" />\n  &lt;meta name=\"description\" content=\"淘宝网 - 亚洲较大的网上交易平台，提供各类服饰、美容、家居、数码、话费/点卡充值… 数亿优质商品，同时提供担保交易(先收货后付款)等安全交易保障服务，并由商家提供退货承诺、破损补寄等消费者保障服务，让你安心享受网上购物乐趣！\" />\n  &lt;meta name=\"aplus-xplug\" content=\"NONE\">\n  &lt;meta name=\"keyword\" content=\"淘宝,掏宝,网上购物,C2C,在线交易,交易市场,网上交易,交易市场,网上买,网上卖,购物网站,团购,网上贸易,安全购物,电子商务,放心买,供应,买卖信息,网店,一口价,拍卖,网上开店,网络购物,打折,免费开店,网购,频道,店铺\" />\n  &lt;link rel=\"dns-prefetch\" href=\"//g.alicdn.com\" />\n  &lt;link rel=\"dns-prefetch\" href=\"//img.alicdn.com\" />\n  &lt;link rel=\"dns-prefetch\" href=\"//tce.alicdn.com\" />\n  &lt;link rel=\"dns-prefetch\" href=\"//gm.mmstat.com\" />\n  &lt;link ref=\"dns-prefetch\" href=\"//tce.taobao.com\" />\n  &lt;link rel=\"dns-prefetch\" href=\"//log.mmstat.com\" />\n  &lt;link rel=\"dns-prefetch\" href=\"//tui.taobao.com\" />\n  &lt;link rel=\"dns-prefetch\" href=\"//ald.taobao.com\" />\n  &lt;link rel=\"dns-prefetch\" href=\"//gw.alicdn.com\" />\n  &lt;link rel=\"dns-prefetch\" href=\"//atanx.alicdn.com\"/>\n  &lt;link rel=\"dns-prefetch\" href=\"//dfhs.tanx.com\"/>\n  &lt;link rel=\"dns-prefetch\" href=\"//ecpm.tanx.com\" />\n  &lt;link rel=\"dns-prefetch\" href=\"//res.mmstat.com\" /></code></pre></div>\n<blockquote>\n<h1>dns-prefetch</h1>\n<p>域名转化为 <code class=\"language-text\">ip</code> 是一个比较耗时的过程，<code class=\"language-text\">dns-prefetch</code> 能让浏览器空闲的时候帮你做这件事。尤其大型网站会使用多域名，这时候更加需要 <code class=\"language-text\">dns</code> 预取。</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">&lt;link rel=\"dns-prefetch\" href=\"//m.baidu.com\"></code></pre></div>\n<h1>prefetch</h1>\n<p><code class=\"language-text\">prefetch</code> 一般用来预加载可能使用的资源，一般是对用户行为的一种判断，浏览器会在空闲的时候加载 <code class=\"language-text\">prefetch</code> 的资源。</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">&lt;link rel=\"prefetch\" href=\"http://www.baidu.com/\"></code></pre></div>\n<h1>preload</h1>\n<p>和 <code class=\"language-text\">prefetch</code> 不同，<code class=\"language-text\">prefecth</code> 通常是加载接下来可能用到的页面资源，而 <code class=\"language-text\">preload</code> 是加载当前页面要用的脚本、样式、字体、图片等资源。所以 <code class=\"language-text\">preload</code> 不是空闲时加载，它的优先级更强，并且会占用 <code class=\"language-text\">http</code> 请求数量。</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">&lt;link rel='preload' href='style.css' as=\"style\" onload=\"console.log('style loaded')\"</code></pre></div>\n</blockquote>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">区别：Preload 来告诉浏览器预先请求当前页需要的资源，从而提高这些资源的请求优先级。比如，对于那些本来请求优先级较低的关键请求，我们可以通过设置 Preload 来提升这些请求的优先级。\nPrefetch 来告诉浏览器用户将来可能在其他页面（非本页面）可能使用到的资源，那么浏览器会在空闲时，就去预先加载这些资源放在 http 缓存内，最常见的 dns-prefetch。比如，当我们在浏览A页面，如果会通过A页面中的链接跳转到B页面，而B页面中我们有些资源希望尽早提前加载，那么我们就可以在A页面里添加这些资源 Prefetch ，那么当浏览器空闲时，就会去加载这些资源。\n所以，对于那些可能在当前页面使用到的资源可以利用 Preload，而对一些可能在将来的某些页面中被使用的资源可以利用 Prefetch。如果从加载优先级上看，Preload 会提升请求优先级；而Prefetch会把资源的优先级放在最低，当浏览器空闲时才去预加载。</code></pre></div>\n<blockquote>\n<h1><code class=\"language-text\">defer</code> 和 <code class=\"language-text\">async</code>    现在重技术的公式面试必问</h1>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">//defer\n&lt;script defer src=\"script.js\">&lt;/script>\n//async\n&lt;script async src=\"script.js\">&lt;/script></code></pre></div>\n<p><code class=\"language-text\">defer</code> 和 <code class=\"language-text\">async</code> 都是异步(并行)加载资源，不同点是 <code class=\"language-text\">async</code> 是加载完立即执行，而 <code class=\"language-text\">defer</code> 是加载完不执行，等到所有元素解析完再执行，也就是 <code class=\"language-text\">DOMContentLoaded</code> 事件触发之前。 因为 <code class=\"language-text\">async</code> 加载的资源是加载完执行，所以它比不能保证顺序，而 <code class=\"language-text\">defer</code> 会按顺序执行脚本。</p>\n</blockquote>\n<h1>■ 一阶段  CSS</h1>\n<h2>🌟 CSS选择器</h2>\n<p><img src=\"E:%5Ccode%5Cqianfeng%5CH5%5CC.%E7%AC%AC%E4%B8%89%E9%98%B6%E6%AE%B5vue%5C%E8%80%81%E5%B8%88%E7%9A%84%E4%BB%A3%E7%A0%81%5C%E9%9D%A2%E8%AF%95%E9%A2%98%5C%E9%9D%A2%E8%AF%95%E9%A2%98%5CCSS%E9%80%89%E6%8B%A9%E5%99%A8.png\"> 留心：:befor是Css2的写法（兼容好），::before是Css3的写法（兼容相对不好)</p>\n<h2>🌛 CSS选择器优先级</h2>\n<p>权重顺序： <code class=\"language-text\">!important > 行内样式 > ID > 类、伪类、属性 > 标签 > 通配符 > 继承 > 浏览器默认属性</code></p>\n<p>权重大小</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">通配符0\n标签 1\n类/伪类/属性 10\nID 100\n行内样式 1000\nimportant\t无穷大</code></pre></div>\n<h2>🌟 CSS3新特性</h2>\n<ul>\n<li>属性选择器选择器</li>\n<li>圆角</li>\n<li>阴影</li>\n<li>渐变</li>\n<li>多列布局</li>\n<li>css自定艺术性</li>\n<li>等等</li>\n</ul>\n<h2>🌟 定位 position</h2>\n<p>static 默认值，没有定位，元素出现在正常的文档流中；</p>\n<p>relative 相对定位，相对位置为 自身默认位置；</p>\n<p>absolute绝对定位，相对位置为  最近父非static的元素，没有就是body/可见视口/浏览器窗口；</p>\n<p>fixed固定定位，对象位置为 body/可见视口/浏览器窗口；</p>\n<p>sticky粘性定位，该定位基于用户滚动的位置；</p>\n<h2>🌟 定位 position场景</h2>\n<p>static  默认</p>\n<p>relative、absolute 淘宝京东轮播图左右箭头、分页器、热卖商品、新品等等</p>\n<p>fixed  传统网站两侧滚动广告、还有右下角客服、返回顶部等等</p>\n<p>sticky 网站导航栏 例如 <a href=\"https://www.discuz.net/\">https://www.discuz.net/</a> </p>\n<h2>🌟 谈谈你对盒模型的理解</h2>\n<p>问：什么是盒模型？</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">网页布局中CSS布局的思想模型，\n主要规定元素和元素之间的关系\n例如：内容（content）,内边距（padding）,边框（border）,外边距（margin）</code></pre></div>\n<p>问： 标准盒模型、怪异盒模型</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">用box-sizing告诉浏览器如何计算一个元素是总宽度和总高度\n\n标准盒模型   box-sizing: content-box\n一个块的总宽度  width + margin(左右) + padding(左右) + border(左右)\n\t\nIE盒模型或怪异盒模型 box-sizing: border-box\n一个块的总宽度 = width（已包含padding和border） + margin(左右)</code></pre></div>\n<h2>🌟 谈谈你对BFC的理解</h2>\n<p>BFC是什么：是一个独立的布局环境</p>\n<p>BFC能干吗：形成一个完全独立的空间，让空间中的子元素不会影响外面的布局</p>\n<p>BFC特性（独立空间内元素/标签的布局规则）</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">1 垂直方向上的距离由margin决定，属于同一个BFC的两个相邻的块级元素会发生margin合并，不属于同一个BFC的两个相邻的块级元素不会发生margin合并（应用：防止margin重叠）；\n\n2 BFC的区域不会与float box重叠（应用：自适应两栏布局）\n\n3 计算BFC的高度时，浮动元素也参与计算（应用：清除内部浮动）\n\n4 内部的Box会在垂直方向，一个接一个地放置。\n\n5 每个盒子（块盒与行盒）的margin box的左边，与包含块border box的左边相接触(对于从左往右的格式化，否则相反)；即使存在浮动也是如此。（说明：就是子盒子排列时候从父盒子左上角开始）\n\n6 BFC就是页面上的一个隔离的独立容器，容器里面的子元素不会影响到外面的元素。反之也如此。</code></pre></div>\n<p>触发BFC</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">float：除 none 以外的值\nposition为 absolute、fixed\ndisplay 为 inline-block、table、table-row、table-cell、flex等等\noverflow 除了 visible 以外的值 (hidden、auto、scroll)\ncolumn-count等</code></pre></div>\n<p>BFC应用</p>\n<ul>\n<li>自适应两栏、三栏布局</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">&lt;style>\n* {padding:0px;margin:0px;}\n.left {width:200px;height:100px;background:green;float: left;}\n.right {height:200px;background:red;overflow: hidden; }\n&lt;/style>\n\n&lt;div class=\"left\">&lt;/div>\n&lt;div class=\"right\">&lt;/div></code></pre></div>\n<ul>\n<li>清清除内部浮动</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">&lt;style>\n* {padding:0px;margin:0px;}\n/*\nul {background: green;}\n*/\nul {background: green; overflow: hidden;}\nli {width:100px;height:20px;background:red;float: left;}\n&lt;/style>\n\n&lt;ul>\n    &lt;li>001&lt;/li>\n    &lt;li>002&lt;/li>\n    &lt;li>003&lt;/li>\n&lt;/ul></code></pre></div>\n<ul>\n<li>利用BFC避免margin重叠（案例：京西商城后台首页头部导航</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">&lt;style>\n* {padding:0px;margin:0px;}\np {width:100px;height:20px;background:red;margin:10px 0px;}\n&lt;/style>\n\n&lt;!-- \n&lt;p>盒子1&lt;/p>\n&lt;p>盒子2&lt;/p> \n-->\n\n&lt;div style=\"overflow:hidden;\">&lt;p>盒子1&lt;/p>&lt;/div>\n&lt;p>盒子2&lt;/p> </code></pre></div>\n<h2>🌛 谈谈你对栅格的理解</h2>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">将网页内容划分成12等分\n使用布局容器宽度变小了，依旧12等分  \n会发现内容变小了\n不够就空着\n超出就另起一行\n\n\n案例：bootstrap\n测试：https://www.bootcss.com/p/layoutit/  </code></pre></div>\n<h2>🌟 自适应</h2>\n<p>rem和em区别、vw是什么</p>\n<p>都是相对单位</p>\n<p>rem相对于html绕开了复杂的层级关系</p>\n<p>em相对父麻烦</p>\n<p>vw可视窗口1%</p>\n<h2>🌛 解决谷歌最小字体12px限制</h2>\n<p>通过transform缩放即可解决</p>\n<p>transform: scale</p>\n<h2>🌟 CSS三角形怎么实现</h2>\n<p>宽度、高度设为0，然后设置边框样式全透明</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">width: 0;\nheight: 0;\nborder-top: 40px solid transparent;\nborder-left: 40px solid transparent;\nborder-right: 40px solid transparent;\nborder-bottom: 40px solid #ff0000;</code></pre></div>\n<h2>🌟 高度塌陷解决方法</h2>\n<p>概念：父高自适应，子浮动，父高为0的表现</p>\n<p>解决：</p>\n<blockquote>\n<p>方法1：clear: both + 空标签   （不推荐 代码冗余）\n方法2：父级添加overflow属性（不推荐 超出隐藏 特殊布定位布局出问题）\n方法3：伪元素清除浮动（推荐使用）\n方法4：双伪元素清除浮动（推荐使用）</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">/*声明清除浮动的样式*/\n.clearfix:after {\n\tcontent: \"\";\t\t\n\tdisplay: block; \t// 没有内容转换为快元素\n\tclear: both;\t\t// 清除浮动\n\tvisibility: hidden;  // 元素隐藏，位置保留\n\theight: 0;\t\t  \t// 解决IE6解析高度0不正确问题\n\toverflow: hidden;  \t // 解决IE6解析高度0不正确问题\n}\n.clearfix {\n *zoom: 1;  /*ie6,7 专门清除浮动的样式*/\n}\n\n\n/*声明清除浮动的样式*/\n.clearfix:before ,.clearfix:after {\n\tcontent: \"\";\n\tdisplay: table;\n}\n.clearfix:after {\n clear:both;\n}\n.clearfix {\n*zoom: 1;  /*ie6,7 专门清除浮动的样式*/\n}</code></pre></div>\n</blockquote>\n<h2>🌟 样式兼容</h2>\n<p>【所有】都图片下方三像素原因及解决办法          解决：display:block、vertical-align: middle;</p>\n<p>【谷歌】表单元素获取焦点有边框线  \t\t   解决：outline: none</p>\n<p>【IE】表单元素去掉边框 border:none 不兼容IE低版本   解决：border:0;</p>\n<p>【IE】表单元素加高度后所有浏览器默认内容垂直居中 不兼容IE低版本  解决：加行高line-height</p>\n<p>【IE】a标签包图片会有边框                解决：图片border:0</p>\n<p>【IE】透明语法兼容问题</p>\n<p>【IE】双倍margin问题</p>\n<p> 等等</p>\n<p>css hack     </p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">选择器 {\n    height:32px;\n    background-color:#f1ee18;    /*所有识别*/\n    .background-color:#00deff\\9; /*IE6、7、8识别*/\n    +background-color:#a200ff;   /*IE6、7识别*/\n    _background-color:#1e0bd1;   /*IE6识别*/\n}</code></pre></div>\n<h2>🌛1px细线问题</h2>\n<p>说明：在移动端实现1px</p>\n<p>文档</p>\n<blockquote>\n<p><a href=\"http://www.alloyteam.com/2020/06/css-pixels/\">http://www.alloyteam.com/2020/06/css-pixels/</a></p>\n<p><a href=\"https://juejin.cn/post/6844903734347055118#heading-10\">https://juejin.cn/post/6844903734347055118#heading-10</a> </p>\n</blockquote>\n<p>解决：</p>\n<blockquote>\n<p>方法1：伪元素 + transform</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">.border-1px {\n position: relative;\n}\n.border-1px:after {\n content: \" \";\n position: absolute;\n left: 0;\n top: 0;\n width: 100%;\n height: 1px;\n border-top: 1px solid red;\n color: red;\n -webkit-transform-origin: 0 0;\n transform-origin: 0 0;\n}\n\n/* 2倍屏 */\n@media only screen and (-webkit-min-device-pixel-ratio: 2.0) {\n.border-1px:after {\n   -webkit-transform: scaleY(0.5);\n   transform: scaleY(0.5);\n}\n}\n\n/* 3倍屏 */\n@media only screen and (-webkit-min-device-pixel-ratio: 3.0) {\n.border-1px:after {\n   -webkit-transform: scaleY(0.33);\n   transform: scaleY(0.33);\n}\n}</code></pre></div>\n<p>方法2：通过缩放viewport实现</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">var scale = 1 / window.devicePixelRatio;\nvar viewport = document.querySelector(\"meta[name=viewport]\")\nviewport.setAttribute('content', 'width=device-width, initial-scale=' + scale + ', maximum-scale=' + scale + ', minimum-scale=' + scale + ', user-scalable=no')</code></pre></div>\n<p>方法3： 媒体查询利用设备像素比缩放，设置小数像素（存在兼容WWDC苹果全球开发者大会ios8+才支持小数</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">.border { border: 1px solid #999 }\n@media screen and (-webkit-min-device-pixel-ratio: 2) {\n\t.border { border: 0.5px solid #999 }\n}\n@media screen and (-webkit-min-device-pixel-ratio: 3) {\n\t.border { border: 0.333333px solid #999 }\n}\n\n留心：ios8- 和  安卓低版本等都不能识别小数会忽略为0px</code></pre></div>\n<p>开源UI组件库解决方案</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">vant ui  https://github.com/youzan/vant/blob/dev/src/style/mixins/hairline.less\nantd m   https://github.com/ant-design/ant-design-mobile/blob/master/components/style/mixins/hairline.less</code></pre></div>\n</blockquote>\n<h2>🌛图片模糊问题</h2>\n<blockquote>\n<p>方法1 </p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">/*默认大小*/\n.photo {\n\twidth:100px;height:100px;\n\tbackground-image: url(image100.png);\n}\n/* 如果设备像素大于等于2，则用2倍图 */\n@media screen and (-webkit-min-device-pixel-ratio: 2),\nscreen and (min--moz-device-pixel-ratio: 2) {\n.photo {\n background-image: url(image200.png);\n background-size: 100px 100px;\n}\n}\n/* 如果设备像素大于等于3，则用3倍图 */\n@media screen and (-webkit-min-device-pixel-ratio: 3),\nscreen and (min--moz-device-pixel-ratio: 3) {\n.photo {\n background-image: url(image300.png);\n background-size: 100px 100px;\n}\n}</code></pre></div>\n<p>方法2：</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">&lt;img src=\"./imgs/goods.png\" alt=\"\" srcset=\"./imgs/goods@2.png 2x,./imgs/goods@3.png 3x\">   </code></pre></div>\n</blockquote>\n<h2>🌟 link和@import区别</h2>\n<p>功能角度：</p>\n<blockquote>\n<p><code class=\"language-text\">@import</code>是CSS的语法规则，而<code class=\"language-text\">&lt;link>&lt;/link></code>是HTML标签。</p>\n<p>所以link不仅可以加载CSS，还可以定义RSS等，而<code class=\"language-text\">@import</code>只能导入CSS</p>\n</blockquote>\n<p>加载顺序：加载页面时，<code class=\"language-text\">link</code>标签引入的 CSS 被同时加载；<code class=\"language-text\">@import</code>引入的 CSS 将在<strong>页面加载完毕后被加载</strong></p>\n<p>兼容角度：<code class=\"language-text\">@import</code>是 CSS2.1 才有的语法，故只可在 IE5+ 才能识别；<code class=\"language-text\">link</code>标签作为 HTML 元素，不存在兼容性问题</p>\n<p>DOM操作：可以通过 JS 操作 DOM ，插入<code class=\"language-text\">link</code>标签来改变样式；由于DOM方法是基于文档的，无法使用<code class=\"language-text\">@import</code>的方式插入样式。</p>\n<p>优化角度：link可以加一些预解析的标签，而@import没有它强=</p>\n<h2>🌟 水平居中</h2>\n<p>方法1：【移动推荐】利用flex弹性布局   justify-content  center</p>\n<p>方法2：【需要宽高】利用position定位  left 50%   margin-left 负自身一半</p>\n<p>方法3：【需要宽高】利用position定位  right/left =0 然后 margin: auto</p>\n<p>方法4：【留心兼容】利用position定位  transform   translate(-50%,0)</p>\n<p>方法5：【行内元素】text-align  center</p>\n<p>方法6：【块级元素】margin auto</p>\n<h2>🌟 垂直居中</h2>\n<p>方法1：【移动推荐】利用flex弹性布局   align-items  center</p>\n<p>方法2：【需要宽高】利用position定位  top 50%   margin-top 负自身一半</p>\n<p>方法3：【需要宽高】利用position定位  top/bottom=0 然后 margin: auto</p>\n<p>方法4：【留心兼容】利用position定位  transform  translate(0, -50%);</p>\n<p>方法5：【文本居中】line-height</p>\n<h2>🌟 水平垂直居中</h2>\n<p>方法1：【移动推荐】利用flex弹性布局   justify-content/ align-items center</p>\n<p>方法2：【需要宽高】利用position定位  top/left 50%   margin-top/left 负自身一半</p>\n<p>方法3：【需要宽高】利用position定位  top/right/bottom/left =0 然后 margin: auto</p>\n<p>方法4：【留心兼容】利用position定位  transform  translate(-50%,-50%)</p>\n<p>方法5：【留心兼容】利用position定位 calc((100% - 100px) / 2);            </p>\n<p>等等</p>\n<h2>🌟 两栏布局</h2>\n<p>方法1：左固定浮动、右触发BFC</p>\n<p>方法2：左固定浮动、右margin-left</p>\n<p>方法3：左固定定位、右margin-left</p>\n<p>方法4：父弹性盒、左固定、右flex:1 </p>\n<p>等等</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">&lt;style>\n*{padding:0px;margin:0px;}\n.test {width:50px;height:50px;background: black;color:#fff;}\n&lt;/style>\n\n&lt;!-- 方法1：左固定浮动、右触发BFC -->\n&lt;style>\n.left1 {width:200px;height:100px;background:#ccc;float:left;}\n.right1 {height:100px;background:red;overflow: hidden;}\n&lt;/style>\n&lt;div class=\"left1\">你好&lt;/div>\n&lt;div class=\"right1\">&lt;div class=\"test\">中国&lt;/div>&lt;/div>\n\n&lt;!-- 方法2：左固定浮动、右margin-left -->\n&lt;style>\n.left2 {width:200px;height:100px;background:#ccc;float:left;}\n.right2 {height:100px;background:red;margin-left:200px;}\n&lt;/style>\n&lt;div class=\"left2\">你好&lt;/div>\n&lt;div class=\"right2\">&lt;div class=\"test\">中国&lt;/div>&lt;/div>\n\n&lt;!-- 方法3：左固定定位、右margin-left -->\n&lt;style>\n.left3 {width:200px;height:100px;background:#ccc;position:absolute;}\n.right3 {height:100px;background:red;margin-left:200px;}\n&lt;/style>\n&lt;div class=\"left3\">你好&lt;/div>\n&lt;div class=\"right3\">&lt;div class=\"test\">中国&lt;/div>&lt;/div>\n\n&lt;!-- 方法4：父弹性盒、左固定、右flex:1  -->\n&lt;style>\n.main {display: flex;}\n.left4 {width:200px;height:100px;background:#ccc;}\n.right4 {height:100px;background:red;flex:1;}\n&lt;/style>\n&lt;div class=\"main\">\n&lt;div class=\"left4\">你好&lt;/div>\n&lt;div class=\"right4\">&lt;div class=\"test\">中国&lt;/div>&lt;/div>\n&lt;/div></code></pre></div>\n<h2>🌟 三栏布局</h2>\n<p>方法1：左右固定浮动、中间触发BFC</p>\n<p>方法2：左右固定浮动、中间margin-left/right后自适应</p>\n<p>方法3：左右固定定位、中间margin-left/right后自适应</p>\n<p>方法4：弹性盒   左固定  右侧flex:1  </p>\n<p>方法5：圣杯布局、双飞翼布局</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">&lt;style>*{padding:0px;margin:0px;}&lt;/style>\n\n&lt;!-- 方法1：左固定浮动、右触发BFC -->\n&lt;style>\n.left1{width:200px;background:green;float:left;}\n.right1{width:200px;background:#ccc;float:right;}\n.center1{background:red;overflow:hidden;}\n&lt;/style>\n&lt;div class=\"left1\">左侧&lt;/div>\n&lt;div class=\"right1\">右侧&lt;/div>\n&lt;div class=\"center1\">中间&lt;/div>\n\n&lt;!-- 方法2：左右固定浮动、中间margin-left/right后自适应 -->\n&lt;style>\n.left2 {width:200px;background:green;float:left;}\n.right2 {width:200px;background:#ccc;float:right;}\n.center2 {background:red;margin:0px 200px 0px 200px}\n&lt;/style>\n&lt;div class=\"left2\">左侧&lt;/div>\n&lt;div class=\"right2\">右侧&lt;/div>\n&lt;div class=\"center2\">中间&lt;/div>\n\n&lt;!-- 方法3：左右固定定位、中间margin-left/right后自适应 -->\n&lt;style>\n.box3 {position: relative;}\n.left3 {width:200px;background:green;position:absolute;top:0px;left:0px;}\n.right3 {width:200px;background:#ccc;position:absolute;top:0px;right:0px;}\n.center3 {background:red;margin:0px 200px}\n&lt;/style>\n&lt;div class=\"box3\">\n  &lt;div class=\"left3\">左侧&lt;/div>\n  &lt;div class=\"center3\">中间&lt;/div>\n  &lt;div class=\"right3\">右侧&lt;/div>\n&lt;/div>\n\n&lt;!-- 方法4：圣杯布局-有定位 -->\n&lt;style>\n.box4{padding:0 200px;}\n.content4{width:100%;background:red;float:left;}\n.left4{width:200px;background:green;float:left;margin-left:-100%;position: relative;left:-200px;}\n.right4{width:200px;background:#ccc;float:left;margin-left:-200px;position: relative;right:-200px;}\n&lt;/style>\n&lt;div class=\"box4\">\n  &lt;div class=\"content4\">中间&lt;/div>\n  &lt;div class=\"left4\">左侧&lt;/div>\n  &lt;div class=\"right4\">右侧&lt;/div>\n&lt;/div>\n\n&lt;!-- 方法5：双飞翼布局-无定位 -->\n&lt;style>\n.box5 {width:100%;float:left;background:red;}\n.box5 .content5{padding:0 200px;}\n.left5{width:200px;background:green;float:left;margin-left:-100%;}\n.right5{width:200px;background:#ccc;float:left;margin-left:-200px;}\n&lt;/style>\n&lt;div class=\"box5\">\n  &lt;div class=\"content5\">中间&lt;/div>\n&lt;/div>\n&lt;div class=\"left5\">左侧&lt;/div>\n&lt;div class=\"right5\">右侧&lt;/div></code></pre></div>\n<h2>🌟 弹性布局 flex布局</h2>\n<p>说出详细语法 </p>\n<h2>🌟 谈谈你对flex:1的理解</h2>\n<p>哪些属性简写的</p>\n<h2>🌟 网格布局 Grid 布局</h2>\n<p>说出详细语法 </p>","timeToRead":17}},"pageContext":{"slug":"posts/阶段一面试题/","previousPost":{"fields":{"slug":"posts/阶段二面试题/"},"frontmatter":{"title":"阶段二面试题。"}},"nextPost":{"fields":{"slug":"posts/Vue常见面试题/"},"frontmatter":{"title":"Vue常见面试题"}}}},"staticQueryHashes":["3344698684","3792814546"]}