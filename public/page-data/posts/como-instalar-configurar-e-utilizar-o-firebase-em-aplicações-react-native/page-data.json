{"componentChunkName":"component---src-components-templates-blog-post-js","path":"/posts/como-instalar-configurar-e-utilizar-o-firebase-em-aplica√ß√µes-react-native/","result":{"data":{"markdownRemark":{"fields":{"slug":"posts/como-instalar-configurar-e-utilizar-o-firebase-em-aplica√ß√µes-react-native/"},"frontmatter":{"title":"Como instalar, configurar e utilizar o Firebase em aplica√ß√µes React Native","description":"Nesse artigo aprenderemos como instalar, configurar e utilizar o Firebase em nossos apps React Native, al√©m disso, aprenderemos tamb√©m como utilizar o Firebase Auth e Firestore Database.","date":"2022 Âπ¥ 08 Êúà 10 Êó•","thumbnail":"assets/img/water-reminder-app.png"},"html":"<p><img src=\"assets/img/water-reminder-app.png\"></p>\n<p>Ap√≥s come√ßar a utilizar o Firebase em alguns projetos pessoais e profissionais, vejo como essas bibliotecas podem nos auxiliar e empoderar nossos aplicativos, principalmente quando n√£o temos a estrutura de um backend, ou quando queremos ter um login ou banco de dados de forma mais simplificada por exemplo.</p>\n<p>Por isso, decidi criar esse design/projeto exclusivamente para aprendermos a configurar o Firebase e seus pacotes em nossos projetos, al√©m de explicar como utilizar o Auth para criarmos login com e-mail e senha, e o firestore para o armazenamento dos dados dos users.</p>\n<p>O primeiro passo ser√° iniciarmos o nosso projeto, com isso, resolvi cri√°-lo com o React Native CLI visto que o Expo esta com alguns problemas na ultima vers√£o do SDK 65, principalmente relacionado a depend√™ncia <code class=\"language-text\">@types/react</code> onde ele entra em um loop dizendo que voc√™ n√£o instalou a depend√™ncia, mesmo j√° estando instalada.</p>\n<p>Para startar nosso projeto com TypeScript, rodaremos o seguinte comando:</p>\n<p><code class=\"language-text\">npx react-native init nomeProjeto --template react-native-template-typescript</code></p>\n<p>Como o projeto foi criado a partir da CLI, para rodar em nossos emuladores √© necess√°rio realizar o build do app no <code class=\"language-text\">Android Studio</code> e <code class=\"language-text\">XCode</code> ou rodando <code class=\"language-text\">yarn android</code> e <code class=\"language-text\">yarn ios</code> .</p>\n<blockquote>\n<p>üí°¬†NIT: sempre que crio um projeto, eu tamb√©m crio a pasta referente a ele no Github, assim consigo versionar e n√£o perder o que tenho progredido no projeto.</p>\n</blockquote>\n<p>Projeto criado e buildado com sucesso ‚úÖ</p>\n<p><img src=\"assets/img/projeto-inicial-react-native-cli.png\" alt=\"Projeto inicial react native cli buildado\"></p>\n<p>Depois de criado e buildado o projeto, o pr√≥ximo passo que realizo √© iniciar as instala√ß√µes do Firebase. Por√©m, antes de iniciar, voc√™ conhece a ferramenta?</p>\n<h2>O que √© o Firebase?</h2>\n<p>√â uma plataforma do Google que auxilia no desenvolvimento de aplicativos web e/ou mobile, de forma r√°pida e simples.</p>\n<p>O Firebase √© um <strong>BaaS (Backend as a Service),</strong> ou seja, prov√™ a estrutura e o backend sem ter que desenvolver o backend de forma manual, al√©m disso, oferece v√°rias solu√ß√µes como: armazenamento de arquivos, autentica√ß√£o de usu√°rios, banco de dados, analytics, feature-flags...</p>\n<p>Para saber mais sobre a ferramenta, basta acessar as duas documenta√ß√µes dispon√≠veis, a do react native firebase <a href=\"https://rnfirebase.io/\"></a><a href=\"https://rnfirebase.io/\">https://rnfirebase.io/</a> e a do pr√≥prio Firebase <a href=\"https://firebase.google.com/docs\"></a><a href=\"https://firebase.google.com/docs\">https://firebase.google.com/docs</a> .</p>\n<h2>Quais s√£o as vantagens do Firebase?</h2>\n<ul>\n<li>Possui uma vers√£o gratuita e muito completa por sinal</li>\n<li>Escal√°vel</li>\n<li>Possui suporte para diversos tipos de plataformas (iOS, Android, JavaScript e C++) utilizando a mesma API</li>\n<li>Reduz o tempo de desenvolvimento j√° que entrega o backend pronto</li>\n<li>Possui f√°cil implementa√ß√£o</li>\n</ul>\n<h3>1. Criando um projeto no Firebase Console</h3>\n<ol>\n<li>\n<p>Antes de iniciarmos a instala√ß√£o de pacotes no c√≥digo, necessitamos acessar o <a href=\"https://firebase.google.com/\">Console do Firebase</a> para criar um novo projeto. Voc√™ pode utilizar uma conta Google para conectar-se, ou criar uma nova conta gratuita caso n√£o tenha, e para isso, basta clicar em <strong>\"Come√ßar‚Äù.</strong> <a href=\"https://firebase.google.com/\"></a><a href=\"https://firebase.google.com/\">https://firebase.google.com/</a></p>\n<p><img src=\"assets/img/firebase-console.png\" alt=\"Firebase console\"></p>\n</li>\n<li>\n<p>Ap√≥s realizarmos o login no Console do Firebase, clique em <strong>\"+ Adicionar projeto\"</strong></p>\n<p><img src=\"assets/img/firebase-console-adicionar-projeto.png\" alt=\"Firebase console adicionar projeto\"></p>\n</li>\n<li>Em seguida, <strong>digite um nome para o seu projeto</strong> e <strong>clique no bot√£o continuar</strong>.</li>\n<li>Na pr√≥xima etapa, voc√™ pode deixar o Google Analytics ativado ou n√£o e <strong>clicar no bot√£o continuar</strong>.</li>\n<li>Em Configurar o Google Analytics, selecione a op√ß√£o <strong>\"Default Account for Firebase\"</strong> e clique no bot√£o <strong>\"Criar Projeto\"</strong>.</li>\n<li>\n<p>Pronto! Agora √© s√≥ esperar o projeto ser criado. üéâ</p>\n<p><img src=\"assets/img/firebase-console-projeto-criado.png\" alt=\"Firebase console projeto criado\"></p>\n</li>\n</ol>\n<h3>2. Instala√ß√£o do React Native Firebase App</h3>\n<p>Agora, vamos instalar o m√≥dulo React Native Firebase App. Pois, √© ele quem faz a conex√£o da nossa aplica√ß√£o com o Firebase.</p>\n<p>Ent√£o, execute a instala√ß√£o na raiz do projeto:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\"># Com npm\nnpm install --save @react-native-firebase/app\n\n# Com Yarn\nyarn add @react-native-firebase/app</code></pre></div>\n<h3>3. Configura√ß√£o no Android</h3>\n<p>Para realizar a configura√ß√£o no Android, primeiramente necessitamos ir no console do Firebase para adicionar um novo aplicativo Android. Ent√£o, clique no <strong>√≠cone do Android</strong>.</p>\n<p><img src=\"assets/img/adicionar-firebase-android.png\" alt=\"Adicionar Firebase no Android\"></p>\n<ol>\n<li>\n<p>Para registrar nosso app Android no primeiro passo, realizaremos as instru√ß√µes abaixo e posteriormente clicaremos em Registar app para passarmos para as pr√≥ximas etapas.</p>\n<p><img src=\"assets/img/adicionando-firebase-android.png\" alt=\"Adicionando Firebase no Android passo 1\"></p>\n<p>a. Para encontrar o nome do pacote Android, basta acessarmos em nosso c√≥digo o arquivo <a href=\"http://MainActivity.java\">MainActivity.java</a> e o nome estar√° na primeira linha do arquivo.</p>\n<p><img src=\"assets/img/mainactivity.java.png\" alt=\"MainActivity.java\"></p>\n<p>b. Em apelido do app podemos colocar <strong>Android</strong><br>\n<br>\nc. No campo certificado de assinatura SHA-1 n√£o necessitaremos nesse exemplo, pois ele √© obrigat√≥rio apenas em alguns cen√°rios espec√≠ficos, mas caso necessite gerar o certificado, digite no prompt o c√≥digo abaixo e o certificado ser√° gerado.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">cd android\nbash ./gradlew signinReport</code></pre></div>\n<p>Ser√£o geradas v√°rias chaves, mas a necess√°ria para este campo √© <code class=\"language-text\">Variant: debugAndroidTest - SHA1</code></p>\n<p><img src=\"assets/img/sha1.png\" alt=\"SHA1\"></p>\n</li>\n<li>\n<p>Na pr√≥xima etapa, faremos o download do arquivo de configura√ß√£o que √© o <strong>google-services.json</strong> e clicar em <strong>Pr√≥xima.</strong><br>\n<br>\na. Iremos baix√°-lo e inser√≠-lo em nosso c√≥digo dentro de <code class=\"language-text\">/android/app/</code></p>\n<p><img src=\"assets/img/arquivo-google-services.json.png\" alt=\"Arquivo google-services.json\"></p>\n</li>\n<li>\n<p>Posteriormente adicionaremos o SDK do Firebase em nosso aplicativo, ou seja, configuraremos o c√≥digo nativo que ir√° conectar a nossa aplica√ß√£o com o Firebase.<br>\n<br>\na. Primeiro vamos dentro do arquivo <code class=\"language-text\">/android/build.gradle</code> e adicionaremos dentro de <code class=\"language-text\">buildscript</code>:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">buildscript <span class=\"token punctuation\">{</span>\n repositories <span class=\"token punctuation\">{</span>\n   <span class=\"token comment\">// Check that you have the following line (if not, add it):</span>\n   <span class=\"token function\">google</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\">// Google's Maven repository</span>\n <span class=\"token punctuation\">}</span>\n dependencies <span class=\"token punctuation\">{</span>\n   <span class=\"token operator\">...</span>\n   <span class=\"token comment\">// Add this line</span>\n   <span class=\"token function\">classpath</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"com.google.gms:google-services:4.3.13\"</span><span class=\"token punctuation\">)</span>\n\n <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\nallprojects <span class=\"token punctuation\">{</span>\n <span class=\"token operator\">...</span>\n repositories <span class=\"token punctuation\">{</span>\n   <span class=\"token comment\">// Check that you have the following line (if not, add it):</span>\n   <span class=\"token function\">google</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\">// Google's Maven repository</span>\n   <span class=\"token operator\">...</span>\n <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>b. Posteriormente, iremos adicionar dentro do <code class=\"language-text\">arquivo /android/app/build.gradle</code> o seguinte trecho:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">apply plugin<span class=\"token operator\">:</span> <span class=\"token string\">'com.android.application'</span>\n\n<span class=\"token comment\">// Add this line</span>\napply plugin<span class=\"token operator\">:</span> <span class=\"token string\">'com.google.gms.google-services'</span>\n\n\ndependencies <span class=\"token punctuation\">{</span>\n <span class=\"token comment\">// Import the Firebase BoM if you choose utilize analytics</span>\n implementation <span class=\"token function\">platform</span><span class=\"token punctuation\">(</span><span class=\"token string\">'com.google.firebase:firebase-bom:30.3.1'</span><span class=\"token punctuation\">)</span>\n\n <span class=\"token comment\">// Add the dependency for the Firebase SDK for Google Analytics</span>\n <span class=\"token comment\">// When using the BoM, don't specify versions in Firebase dependencies</span>\n implementation <span class=\"token string\">'com.google.firebase:firebase-analytics'</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n</li>\n</ol>\n<h3>4. Configura√ß√£o no iOS</h3>\n<p>Para realizar a configura√ß√£o no iOS segue o mesmo padr√£o do Android, primeiramente necessitamos ir no console do Firebase, clicar em <strong>Adicionar app</strong> e ent√£o, clicaremos no <strong>√≠cone do iOS+</strong>.</p>\n<p><img src=\"assets/img/firebase-adicionar-ios.png\" alt=\"Firebase adicionar ios\"></p>\n<ol>\n<li>\n<p>Conforme configuramos no Android, preencheremos os campos abaixo e em seguida clicaremos em <strong>Registrar app</strong> para seguirmos para as pr√≥ximas etapas.</p>\n<p><img src=\"assets/img/firebae-adicionar-ios.png\" alt=\"Adicionar iOS passo 1\"></p>\n<p>a. Para encontrarmos o nome do <code class=\"language-text\">ID do pacote Apple</code> necessitamos abrir nosso projeto no <code class=\"language-text\">XCode</code> clicar em cima do nome do projeto e assim ser√° aberto ao lado do nome, do lado direito, mais detalhes do projeto, e dentro da aba General conseguimos ver dentro de <strong>Bundle Identifier</strong> o nome que utilizaremos dentro do <code class=\"language-text\">ID do pacote Apple</code></p>\n<p><img src=\"assets/img/bundle-identifier.png\" alt=\"Bundle Identifier\"></p>\n<p>b. No Apelido do app coloquei o nome de iOS<br>\nc. No campo <strong>C√≥digo da App Store</strong> voc√™ pode adicionar caso j√° tenha a conta da appStoreConect, mas √© totalmente opcional</p>\n</li>\n<li>\n<p>Na pr√≥xima etapa, iremos realizar o download do arquivo de configura√ß√£o que √© o <strong>GoogleService-Info.plist</strong> e clicar em <strong>Pr√≥xima</strong>.</p>\n<p><img src=\"assets/img/googleservice-info.plist.png\" alt=\"googleService-Info.plist\"></p>\n<p><br>\na. Iremos baix√°-lo e para inser√≠-lo dentro do projeto, abriremos novamente o <code class=\"language-text\">XCode</code> ‚Üí clicaremos em cima do nome do projeto, apertar o bot√£o direito do mouse ‚Üí <code class=\"language-text\">Add Files to \"nome do projeto</code></p>\n<p><img src=\"assets/img/add-files-xcode.png\" alt=\"Add files XCode\"></p>\n<p>b. Selecionaremos o arquivo baixado e clicaremos em <strong>Add</strong></p>\n<p><img src=\"assets/img/add-file-ios.png\" alt=\"Adding file to XCode project\"></p>\n<p><img src=\"assets/img/file-added.png\" alt=\"File added\"></p>\n</li>\n<li>\n<p>Agora a partir da etapa 3 da documenta√ß√£o, n√£o seguiremos exatamente como est√° descrito. Nesse passo, √© solicitado que adicionemos o SDK do Firebase, mas todas as vezes que tentei realizar esse passo, o SDK de alguma forma fez o meu projeto ter alguns bugs, ent√£o preferi n√£o instal√°-lo, mas esteja a vontade para faz√™-lo, se desejar. Ou seja, esse passo eu pulo.</p>\n<p><img src=\"assets/img/adicionar-sdk-firebase.png\" alt=\"Adicionar SDK firebase\"></p>\n</li>\n<li>\n<p>Na etapa de adicionar o c√≥digo de inicializa√ß√£o, tamb√©m faremos um pouco diferente do que √© visualizado, porque nosso c√≥digo iOS est√° em C++ e as op√ß√µes exibidas s√£o apenas para <code class=\"language-text\">SwiftUI</code>, <code class=\"language-text\">Swift</code> e <code class=\"language-text\">Objective-C</code> .<br>\n<br>\na. Para permitir que o Firebase use as credenciais no iOS, abra dentro do c√≥digo o arquivo ¬†<code class=\"language-text\">/ios/{projectName}/AppDelegate.m</code> e adicionaremos a seguinte linha na parte superior do arquivo, logo abaixo de <code class=\"language-text\">#import \"AppDelegate.h\"</code>:</p>\n<div class=\"gatsby-highlight\" data-language=\"swift\"><pre class=\"language-swift\"><code class=\"language-swift\"><span class=\"token other-directive property\">#import</span> <span class=\"token string-literal\"><span class=\"token string\">\"AppDelegate.h\"</span></span>\n\n<span class=\"token other-directive property\">#import</span> <span class=\"token string-literal\"><span class=\"token string\">\"Firebase.h\"</span></span>\n<span class=\"token other-directive property\">#import</span> <span class=\"token string-literal\"><span class=\"token string\">\"FirebaseCore.h\"</span></span></code></pre></div>\n<p>b. Ainda nesse arquivo, adicionaremos o seguinte trecho de c√≥digo:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token operator\">-</span> <span class=\"token punctuation\">(</span><span class=\"token constant\">BOOL</span><span class=\"token punctuation\">)</span>application<span class=\"token operator\">:</span><span class=\"token punctuation\">(</span>UIApplication <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>application\n   <span class=\"token literal-property property\">didFinishLaunchingWithOptions</span><span class=\"token operator\">:</span><span class=\"token punctuation\">(</span>NSDictionary <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>launchOptions <span class=\"token punctuation\">{</span>\n\n <span class=\"token comment\">// Add this config</span>\n <span class=\"token punctuation\">[</span>FIRApp configure<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n <span class=\"token keyword\">return</span> <span class=\"token constant\">YES</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n</li>\n</ol>\n<h3>5. Instala√ß√£o das bibliotecas do Firebase</h3>\n<p>Agora que nosso Firebase est√° instalado e devidamente configurado, instalaremos as bibliotecas que utilizaremos nesse projeto de login.</p>\n<ol>\n<li>\n<p>A primeira lib a ser instalada ser√° o Cloud Firestore, que √© um banco de dados de documentos NoSQL. √â escalon√°vel e focado em desenvolvimento de aplica√ß√µes m√≥veis e web.</p>\n<p><strong>Principais benef√≠cios</strong></p>\n<ul>\n<li>Flexibilidade</li>\n<li>Consultas expressivas</li>\n<li>Atualiza√ß√µes em tempo real</li>\n<li>Podemos utilizar a sincroniza√ß√£o de dados para atualiz√°-los em qualquer dispositivo conectado</li>\n<li>Suporte off-line</li>\n<li>Armazena em cache os dados ativamente utilizados pelo aplicativo</li>\n<li>Projetado para escalar</li>\n</ul>\n<p>Assim, para podermos utiliz√°-lo necessitamos instalar¬†a biblioteca da seguinte forma:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">yarn add @react-native-firebase/firestore </code></pre></div>\n</li>\n<li>\n<p>A segunda biblioteca que instalaremos ser√° a de Auth para podermos dar vida as telas de login com e-mail e senha. Para instal√°-la necessitamos rodar:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">yarn add @react-native-firebase/auth</code></pre></div>\n<p>Pronto, agora sim, nosso Firebase est√° instalado, configurado, e com as bibliotecas necess√°rias tamb√©m instaladas. Mas agora necessitamos rodar o <code class=\"language-text\">pod install</code> em nossa pasta iOS e posteriormente buildar novamente o projeto em nossos emuladores Android e iOS, visto que fizemos configura√ß√µes em c√≥digos nativos.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">cd ios/ &amp;&amp; pod install</code></pre></div>\n<p>Pode ser que ocorra um erro o rodar o pod install parecido com o abaixo: <br>\n<code class=\"language-text\">The Swift pod FirebaseCoreInternal depends upon GoogleUtilities, which does not define modules. To opt into those targets generating module maps (which is necessary to import them from Swift when building as static libraries), you may set use_modular_headers! globally in your Podfile, or specify :modular_headers => true for particular dependencies.</code><br>\n<br>\nBasicamente temos que permitir vincular bibliotecas est√°ticas Swift, como o <code class=\"language-text\">FirebaseCoreInternal</code> e para isso adicionaremos o seguinte comando em nosso arquivo Podfile:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">pod <span class=\"token string\">'Firebase'</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">:</span><span class=\"token parameter\">modular_headers</span> <span class=\"token operator\">=></span> <span class=\"token boolean\">true</span>\npod <span class=\"token string\">'FirebaseCore'</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">:</span><span class=\"token parameter\">modular_headers</span> <span class=\"token operator\">=></span> <span class=\"token boolean\">true</span>\npod <span class=\"token string\">'FirebaseCoreInternal'</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">:</span><span class=\"token parameter\">modular_headers</span> <span class=\"token operator\">=></span> <span class=\"token boolean\">true</span>\npod <span class=\"token string\">'GoogleUtilities'</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">:</span><span class=\"token parameter\">modular_headers</span> <span class=\"token operator\">=></span> <span class=\"token boolean\">true</span></code></pre></div>\n<p>E depois buildar novamente o projeto nos emuladores Android e iOS, via prompt ou via Android Studio e XCode.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">yarn ios \n\nyarn android</code></pre></div>\n<p>Agora sim, tudo pronto para come√ßarmos a utiliz√°-lo em nosso c√≥digo.<br>\n<br>\nPara iniciarmos a utiliza√ß√£o das bibliotecas que instalamos do Firebase, criei o projeto Water Reminder no meu Github, que pode ser acessado pelo link: <a href=\"https://github.com/ildaneta/water-reminder\"></a><a href=\"https://github.com/ildaneta/water-reminder\">https://github.com/ildaneta/water-reminder</a></p>\n<p>Se voc√™s quiserem, podem clonar o projeto a partir da branch <code class=\"language-text\">feature/screens</code> , assim, toda a parte de telas, componentes e navega√ß√µes j√° estar√£o configuradas, e ser√° poss√≠vel implementar as telas de SignIn, SignUp e Recovery password com o que aprenderemos em seguida.</p>\n<p>Branch: <a href=\"https://github.com/ildaneta/water-reminder/tree/feature/screens\"></a><a href=\"https://github.com/ildaneta/water-reminder/tree/feature/screens\">https://github.com/ildaneta/water-reminder/tree/feature/screens</a></p>\n</li>\n</ol>\n<h3>Utilizando o Auth e Cloud Firestore</h3>\n<ol>\n<li>\n<p>Para iniciarmos a utilizar o Auth do Firebase, iremos novamente at√© o console <a href=\"https://console.firebase.google.com/\">https://console.firebase.google.com</a> e no menu superior esquerdo clicaremos em Cria√ß√£o ‚Üí Authentication</p>\n<p><img src=\"assets/img/firebase-authentication.png\" alt=\"Firebase Authentication\"></p>\n<p>Logo em seguida, clicaremos em <strong>Vamos come√ßar</strong> ‚Üí escolher a op√ß√£o de <strong>E-mail/senha</strong></p>\n<p><img src=\"assets/img/autenticacao-email-senha.png\" alt=\"Autentica√ß√£o com email e senha\"></p>\n<p>Ativaremos a primeira op√ß√£o e logo ap√≥s, clicar em <strong>Salvar.</strong></p>\n<p><img src=\"assets/img/email-senha.png\" alt=\"Email e senha\"></p>\n</li>\n<li>\n<p>Configuramos nosso Auth no console do Firebase, agora criaremos nosso Cloud Firestore, ou seja, nosso banco de dados, que salvar√° os dados dos users. Para isso, iremos novamente no menu superior esquerdo, clicaremos em <strong>Firestore Database</strong> e logo ap√≥s em <strong>Criar banco de dados.</strong></p>\n<p><img src=\"assets/img/cloud-firestore.png\" alt=\"Cloud Firestore\"></p>\n<p>Escolha o <strong>modo de produ√ß√£o</strong> ‚Üí <strong>Avan√ßar</strong>, logo ap√≥s, o <strong>local do Cloud Firestore</strong> e <strong>Ativar</strong></p>\n<p><img src=\"assets/img/modo-producao.png\" alt=\"Modo produ√ß√£o\"></p>\n<p>Assim que nosso banco de dados estiver criado, iremos dentro de Regras e apagaremos a parte <code class=\"language-text\">: if false</code>; do lado de <code class=\"language-text\">,write</code> , em seguida, clicar em <strong>Publicar</strong>, porque assim, salvaremos dados no banco de dados, mesmo quando o usu√°rio ainda n√£o estiver logado.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">rules_version <span class=\"token operator\">=</span> <span class=\"token string\">'2'</span><span class=\"token punctuation\">;</span>\nservice cloud<span class=\"token punctuation\">.</span>firestore <span class=\"token punctuation\">{</span>\n match <span class=\"token operator\">/</span>databases<span class=\"token operator\">/</span><span class=\"token punctuation\">{</span>database<span class=\"token punctuation\">}</span><span class=\"token operator\">/</span>documents <span class=\"token punctuation\">{</span>\n   match <span class=\"token operator\">/</span><span class=\"token punctuation\">{</span>document<span class=\"token operator\">=</span><span class=\"token operator\">**</span><span class=\"token punctuation\">}</span> <span class=\"token punctuation\">{</span>\n     allow read<span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">write</span><span class=\"token operator\">:</span> <span class=\"token comment\">// if false; // apagar</span>\n   <span class=\"token punctuation\">}</span>\n <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><img src=\"assets/img/firestore-rules.png\" alt=\"Firestore rules\"></p>\n</li>\n<li>\n<p>O pr√≥ximo passo √© configurar uma cole√ß√£o, que seria o mesmo de uma tabela, nesse caso, ser√° nossa tabela de users. Daremos o nome da cole√ß√£o e clicaremos em <strong>Pr√≥xima</strong>.</p>\n<p><img src=\"assets/img/firestore-collection.png\" alt=\"Firestore Collection\"></p>\n<p>Para criar uma collection pelo Firebase √© necess√°rio inserir um id do documento, nesse caso, podemos clicar em <strong>C√≥digo autom√°tico</strong> e <strong>Salvar</strong> assim nossa collection estar√° criada.</p>\n<p><img src=\"assets/img/firestore-collection.png\" alt=\"Collection\"></p>\n</li>\n<li>Agora chegou o momento do c√≥digo.<br>\nPara essa aplica√ß√£o, como tudo est√° relacionado a parte de login, criei um hook chamado <code class=\"language-text\">useAuth</code> onde estar√£o todas as fun√ß√µes necess√°rias para o login funcionar corretamente, que ser√£o: <strong>signUp</strong>(respons√°vel por criar um usu√°rio), <strong>signIn</strong>(respons√°vel por realizar o login), <strong>singOut</strong>(respons√°vel por deslogar o usu√°rio), <strong>recoveryPassword</strong>(respons√°vel por resetar a senha do user via e-mail), <strong>isLoading</strong>(retornar√° se est√° havendo um carregamento), e <strong>user</strong>(retorna o id e <strong>username</strong> do usu√°rio).</li>\n<li>\n<p>Criando um Usu√°rio com <strong>Firebase Auth</strong> e adicionando-o dentro da collection de Users do <strong>Firebase Firestore.</strong><br>\nPara criar o usu√°rio com o auth √© necess√°rio chamar o m√©todo do auth <code class=\"language-text\">.createUserWithEmailAndPassword(email, password)</code> passando o email e senha digitada pelo user. Ap√≥s isso, guardo os dados no firestore, chamando o m√©todo <code class=\"language-text\">firestore()</code>, para salvar os dados na collection de users, utilizo o m√©todo <code class=\"language-text\">.collection('users')</code> passando o nome da collection.</p>\n<p>Aqui tem um detalhe importante, pois para adicionar dados em uma collection posso utilizar duas formas, uma com o m√©todo <code class=\"language-text\">.add()</code>, assim criamos um novo dado na collection com um id aleat√≥rio criado pelo Firebase, mas nesse cen√°rio eu precisava que o id do documento da collection fosse igual ao id do user criado no auth, com isso, ao adicionar eu utilizo o m√©todo <code class=\"language-text\">.doc(uid)</code> passando o id da conta do usu√°rio dentro do auth, e chamo o m√©todo <code class=\"language-text\">.set()</code> passando o id do user e o nome de cadastro que ser√£o armazenados na collection de users do firestore.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">signUp</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span>username<span class=\"token punctuation\">,</span> email<span class=\"token punctuation\">,</span> password<span class=\"token punctuation\">}</span><span class=\"token operator\">:</span> SignUpData</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n   <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>username <span class=\"token operator\">||</span> <span class=\"token operator\">!</span>email <span class=\"token operator\">||</span> <span class=\"token operator\">!</span>password<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n     <span class=\"token keyword\">return</span> Alert<span class=\"token punctuation\">.</span><span class=\"token function\">alert</span><span class=\"token punctuation\">(</span>\n       <span class=\"token string\">'SignUp'</span><span class=\"token punctuation\">,</span>\n       <span class=\"token string\">'Enter username, e-mail and password to create your account.'</span><span class=\"token punctuation\">,</span>\n     <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token punctuation\">}</span>\n\n   <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>password<span class=\"token punctuation\">.</span>length <span class=\"token operator\">&lt;</span> <span class=\"token number\">6</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n     <span class=\"token keyword\">return</span> Alert<span class=\"token punctuation\">.</span><span class=\"token function\">alert</span><span class=\"token punctuation\">(</span>\n       <span class=\"token string\">'SignUp'</span><span class=\"token punctuation\">,</span>\n       <span class=\"token string\">'Password cannot be less than 6 characters.'</span><span class=\"token punctuation\">,</span>\n     <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token punctuation\">}</span>\n\n   <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n     <span class=\"token function\">setIsLoading</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n     <span class=\"token keyword\">await</span> <span class=\"token function\">auth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n       <span class=\"token punctuation\">.</span><span class=\"token function\">createUserWithEmailAndPassword</span><span class=\"token punctuation\">(</span>email<span class=\"token punctuation\">,</span> password<span class=\"token punctuation\">)</span>\n       <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">account</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n         <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>uid<span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> account<span class=\"token punctuation\">.</span>user<span class=\"token punctuation\">;</span>\n\n         <span class=\"token function\">firestore</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n           <span class=\"token punctuation\">.</span><span class=\"token function\">collection</span><span class=\"token punctuation\">(</span><span class=\"token string\">'users'</span><span class=\"token punctuation\">)</span>\n           <span class=\"token punctuation\">.</span><span class=\"token function\">doc</span><span class=\"token punctuation\">(</span>uid<span class=\"token punctuation\">)</span>\n           <span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n             <span class=\"token literal-property property\">id</span><span class=\"token operator\">:</span> uid<span class=\"token punctuation\">,</span>\n             username<span class=\"token punctuation\">,</span>\n           <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n           <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n             Alert<span class=\"token punctuation\">.</span><span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">'SignUp'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Account created with sucess!'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>\n               <span class=\"token punctuation\">{</span>\n                 <span class=\"token literal-property property\">text</span><span class=\"token operator\">:</span> <span class=\"token string\">'Ok'</span><span class=\"token punctuation\">,</span>\n                 <span class=\"token function-variable function\">onPress</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> navigation<span class=\"token punctuation\">.</span><span class=\"token function\">navigate</span><span class=\"token punctuation\">(</span><span class=\"token string\">'SignIn'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n               <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n             <span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n           <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n         <span class=\"token function\">setIsLoading</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n       <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n       <span class=\"token punctuation\">.</span><span class=\"token function\">catch</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">error</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n         <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>code<span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> error<span class=\"token punctuation\">;</span>\n\n         <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>code <span class=\"token operator\">===</span> <span class=\"token string\">'auth/email-already-in-use'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n           <span class=\"token keyword\">return</span> Alert<span class=\"token punctuation\">.</span><span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">'SignUp'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'E-mail is already in use'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n         <span class=\"token punctuation\">}</span>\n         <span class=\"token function\">setIsLoading</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n       <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n       <span class=\"token punctuation\">.</span><span class=\"token function\">finally</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n         <span class=\"token function\">setIsLoading</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n       <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Basicamente s√£o esses os passos para criar um usu√°rio com as duas libs, o restante do c√≥digo s√£o apenas algumas verifica√ß√µes e redirecionamentos que realizo.</p>\n</li>\n<li>\n<p>Realizar o login de um usu√°rio j√° cadastrado na base dados do auth e firestore</p>\n<p>Os passos para realizar o login s√£o bem parecidos ao de criar um novo user, o que mudam s√£o os m√©todos utilizados.</p>\n<p>No auth, ao inv√©s de utilizar o <code class=\"language-text\">.createUserWithEmailAndPassword()</code> para criar, utilizaremos o <code class=\"language-text\">.signInWithEmailAndPassword(email, password)</code> para realizar o login, e para trazer do firestore esse user j√° cadastrado, utilizamos o m√©todo <code class=\"language-text\">.get()</code> passando antes qual a collection que iremos buscar o dado e qual o id do documento que ser√° recuperado.</p>\n<p>Outro passo que realizo no signIn √© salvar os dados do usu√°rio que s√£o o id e o nome dentro do <code class=\"language-text\">AsyncStorage</code> assim consigo verificar se o usu√°rio j√° est√° logado para que n√£o precise passar novamente pela tela de signIn.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">signIn</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span>email<span class=\"token punctuation\">,</span> password<span class=\"token punctuation\">}</span><span class=\"token operator\">:</span> SignInData</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n   <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>email <span class=\"token operator\">||</span> <span class=\"token operator\">!</span>password<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n     <span class=\"token keyword\">return</span> Alert<span class=\"token punctuation\">.</span><span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">'SignIn'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'E-mail and password is required.'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token punctuation\">}</span>\n\n   <span class=\"token function\">setIsLoading</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n   <span class=\"token function\">auth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n     <span class=\"token punctuation\">.</span><span class=\"token function\">signInWithEmailAndPassword</span><span class=\"token punctuation\">(</span>email<span class=\"token punctuation\">,</span> password<span class=\"token punctuation\">)</span>\n     <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">response</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n       <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>uid<span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> response<span class=\"token punctuation\">.</span>user<span class=\"token punctuation\">;</span>\n       <span class=\"token function\">firestore</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n         <span class=\"token punctuation\">.</span><span class=\"token function\">collection</span><span class=\"token punctuation\">(</span><span class=\"token string\">'users'</span><span class=\"token punctuation\">)</span>\n         <span class=\"token punctuation\">.</span><span class=\"token function\">doc</span><span class=\"token punctuation\">(</span>uid<span class=\"token punctuation\">)</span>\n         <span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n         <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">async</span> <span class=\"token parameter\">profile</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n           <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>id<span class=\"token punctuation\">,</span> username<span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> profile<span class=\"token punctuation\">.</span><span class=\"token function\">data</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> IUser<span class=\"token punctuation\">;</span>\n\n           <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>profile<span class=\"token punctuation\">.</span>exists<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n             <span class=\"token keyword\">const</span> userData <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n               id<span class=\"token punctuation\">,</span>\n               username<span class=\"token punctuation\">,</span>\n             <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n             <span class=\"token function\">setUser</span><span class=\"token punctuation\">(</span>userData<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n             AsyncStorage<span class=\"token punctuation\">.</span><span class=\"token function\">setItem</span><span class=\"token punctuation\">(</span><span class=\"token constant\">USER_COLLECTION</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span>userData<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n             navigation<span class=\"token punctuation\">.</span><span class=\"token function\">navigate</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Home'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n           <span class=\"token punctuation\">}</span>\n\n           <span class=\"token function\">setIsLoading</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n         <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n     <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n     <span class=\"token punctuation\">.</span><span class=\"token function\">catch</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">error</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n       <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>code<span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> error<span class=\"token punctuation\">;</span>\n\n       <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>code <span class=\"token operator\">===</span> <span class=\"token string\">'auth/wrong-password'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n         <span class=\"token keyword\">return</span> Alert<span class=\"token punctuation\">.</span><span class=\"token function\">alert</span><span class=\"token punctuation\">(</span>\n           <span class=\"token string\">'SignIn'</span><span class=\"token punctuation\">,</span>\n           <span class=\"token string\">'The password is invalid or the user does not have a password.'</span><span class=\"token punctuation\">,</span>\n         <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n       <span class=\"token punctuation\">}</span>\n\n       <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>code <span class=\"token operator\">===</span> <span class=\"token string\">'auth/user-not-found'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n         Alert<span class=\"token punctuation\">.</span><span class=\"token function\">alert</span><span class=\"token punctuation\">(</span>\n           <span class=\"token string\">'SignIn'</span><span class=\"token punctuation\">,</span>\n           <span class=\"token string\">'There is no user record corresponding to this e-mail.'</span><span class=\"token punctuation\">,</span>\n         <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n       <span class=\"token punctuation\">}</span>\n     <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n     <span class=\"token punctuation\">.</span><span class=\"token function\">finally</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token function\">setIsLoading</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n</li>\n<li>\n<p>Realizar a recupera√ß√£o de senha do user<br>\nPara enviar um e-mail de recupera√ß√£o de senha e assim o usu√°rio poder modific√°-la, utilizamos o m√©todo do auth <code class=\"language-text\">.sendPasswordResetEmail(email)</code>, esse √© bem simples, porque o firebase cuida de todo o restante, que seria enviar o e-mail e salvar a nova senha cadastrada. No c√≥digo abaixo al√©m de chamar o m√©todo para recuperar a senha, apresento alertas em caso de sucesso e erro.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">recoveryPassword</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span>email<span class=\"token punctuation\">}</span><span class=\"token operator\">:</span> RecoveryPasswordData</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n   <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>email<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n     <span class=\"token keyword\">return</span> Alert<span class=\"token punctuation\">.</span><span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Recovery password'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'E-mail is required.'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token punctuation\">}</span>\n\n   <span class=\"token keyword\">await</span> <span class=\"token function\">auth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n     <span class=\"token punctuation\">.</span><span class=\"token function\">sendPasswordResetEmail</span><span class=\"token punctuation\">(</span>email<span class=\"token punctuation\">)</span>\n     <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n       Alert<span class=\"token punctuation\">.</span><span class=\"token function\">alert</span><span class=\"token punctuation\">(</span>\n         <span class=\"token string\">'Recovery password'</span><span class=\"token punctuation\">,</span>\n         <span class=\"token string\">'We have sent a link to your email to reset your password.'</span><span class=\"token punctuation\">,</span>\n         <span class=\"token punctuation\">[</span>\n           <span class=\"token punctuation\">{</span>\n             <span class=\"token literal-property property\">text</span><span class=\"token operator\">:</span> <span class=\"token string\">'Ok'</span><span class=\"token punctuation\">,</span>\n             <span class=\"token function-variable function\">onPress</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> navigation<span class=\"token punctuation\">.</span><span class=\"token function\">navigate</span><span class=\"token punctuation\">(</span><span class=\"token string\">'SignIn'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n           <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n         <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n       <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n     <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n     <span class=\"token punctuation\">.</span><span class=\"token function\">catch</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">error</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n       <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>code<span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> error<span class=\"token punctuation\">;</span>\n\n       <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>code <span class=\"token operator\">===</span> <span class=\"token string\">'auth/user-not-found'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n         Alert<span class=\"token punctuation\">.</span><span class=\"token function\">alert</span><span class=\"token punctuation\">(</span>\n           <span class=\"token string\">'Recovery password'</span><span class=\"token punctuation\">,</span>\n           <span class=\"token string\">'It was not possible to send the password reset to your e-mail, because the e-mail you entered was not registered.'</span><span class=\"token punctuation\">,</span>\n         <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n       <span class=\"token punctuation\">}</span>\n     <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n</li>\n<li>\n<p>Deslogar o user da aplica√ß√£o<br>\nPor fim, mas n√£o menos importante, seria o passo de realizar o logout do usu√°rio do aplicativo, e para isso chamamos o m√©todo do auth <code class=\"language-text\">.signOut()</code>. Como eu tamb√©m salvo no <code class=\"language-text\">AsyncStorage</code> os dados do user quando ele loga, nesse momento eu tamb√©m os removo e navego novamente para a tela de SignIn.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">signOut</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n   <span class=\"token function\">setIsLoading</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token keyword\">await</span> <span class=\"token function\">auth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">signOut</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token keyword\">await</span> AsyncStorage<span class=\"token punctuation\">.</span><span class=\"token function\">removeItem</span><span class=\"token punctuation\">(</span><span class=\"token constant\">USER_COLLECTION</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token function\">setUser</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token function\">setIsLoading</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n   navigation<span class=\"token punctuation\">.</span><span class=\"token function\">navigate</span><span class=\"token punctuation\">(</span><span class=\"token string\">'SignIn'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n</li>\n</ol>\n<p>Basicamente s√£o esses os passos que temos que realizar para ter a solu√ß√£o de login completa utilizando o firebase.</p>\n<p>Lembrando que voc√™s podem acompanhar todo o progresso / implementa√ß√£o do aplicativo pelo projeto no Github: <a href=\"https://github.com/ildaneta/water-reminder\"></a><a href=\"https://github.com/ildaneta/water-reminder\">https://github.com/ildaneta/water-reminder</a></p>\n<p>Al√©m disso, esse projeto √© open source, ou seja, o c√≥digo √© aberto e voc√™s podem utiliz√°-lo a vontade, al√©m disso, √© uma √≥tima oportunidade para realizar contribui√ß√µes, ou seja, voc√™s podem fazer esse app criar vida, enviar solicita√ß√µes de pull request para mim, inserir testes, enfim, colocar todos os conhecimentos em pr√°tica e ainda contribuir em um projeto da comunidade.</p>\n<p>Espero que tenham gostado do artigo, apesar de bem grande, tentei explicar no m√°ximo de detalhes poss√≠veis como instalar, configurar e utilizar o Firebase, que ja √© uma das minhas libs favoritas, e que no come√ßo tive alguns probleminhas para realizar a instala√ß√£o inicial, que para mim √© o mais complexo.</p>\n<p>At√© o pr√≥ximo artigo pessoal! ü´∂üèª</p>","timeToRead":15}},"pageContext":{"slug":"posts/como-instalar-configurar-e-utilizar-o-firebase-em-aplica√ß√µes-react-native/","previousPost":{"fields":{"slug":"posts/dicas-para-se-tornar-um-a-desenvolvedor-a/"},"frontmatter":{"title":"Dicas para se tornar um(a) desenvolvedor(a)!"}},"nextPost":{"fields":{"slug":"posts/ÊàëÊòØÊµãËØïÈ°µÈù¢/"},"frontmatter":{"title":"ÁîüÂëΩÂë®ÊúüÊñπÈù¢"}}}},"staticQueryHashes":["3344698684","3792814546"]}